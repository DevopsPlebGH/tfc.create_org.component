name: Get Github Deployment Environments

on:
  push:
    branches:
      - feature/get_deployment_envs

env:
  BASE_URI: 'https://api.github.com/repos/'
  HEADER: '"Content-Type": "application/vnd.github+json"'
jobs:
  matrix:
    name: List Deployment Environments
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          function get_environments(){
            $token="${{ github.token }}"
            $header=@{
              content_type = 'application/vnd.github+json'
              Authorization = "Bearer $token"
            }
            $base_uri="${{ env.BASE_URI }}"
            $uri="$base_uri"+"${{ github.repository }}/environments"

            $response = Invoke-RestMethod -Uri $uri -Headers $header -Method GET
            $data = $response.environments.name | ConvertTo-JSON

            return $data
          }

          $matrix=get_environments
          echo "::set-output name=matrix::$matrix"
        shell: pwsh
  check_matrix:
    runs-on: ubuntu-latest
    needs: matrix
    steps:
      - name: Check matrix definition
        run: |
          matrix='${{ fromJSON(needs.matrix.outputs.matrix) }}'
          echo $matrix
  check_tfc_orgs:
    name: Check if Terraform Cloud Organizations already exist
    runs-on: ubuntu-latest
    needs: matrix
    outputs:
      create: ${{ steps.response.outputs.create }}
      defined: ${{ steps.isDefined.outputs.defined }}
      notdefined: ${{ steps.isNotDefined.outputs.notdefined }}
      orgs: ${{ steps.orgMatrix.outputs.orgs }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - environment: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    steps:
      - id: request
        uses: fjogeleit/http-request-action@v1
        with:
          url: "${{ env.BASE_URI }}/organizations?q[name]=${{ matrix.environment }}"
          method: GET
          customHeaders: '${{ env.HEADER }}'
          bearerToken: ${{ secrets.TF_API_TOKEN }}
        env:
          BASE_URI: 'https://app.terraform.io/api/v2/'
          HEADER: '{"Content-Type": "application/vnd.api+json"}'
      - id: response
        run: |
          echo "${{ fromJSON(steps.request.outputs.response).data['0'].id }}"
          echo '::set-output name=create::${{ fromJson(steps.request.outputs.response).data['0'].id }}'


